{"mappings":"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","sources":["src/index.js","src/krakenHtml/src/htmlRecord.js","src/krakenHtml/src/htmlValue.js","src/krakenHtml/src/htmlPage.js","src/krakenHtml/src/htmlTable.js","src/krakenHtml/src/htmlCard.js"],"sourcesContent":["\n\nimport { htmlRecord } from './krakenHtml/src/htmlRecord.js'\nimport { htmlPage } from './krakenHtml/src/htmlPage.js'\nimport { htmlTable } from './krakenHtml/src/htmlTable.js'\nimport { htmlValue } from './krakenHtml/src/htmlValue.js'\nimport { htmlCard } from './krakenHtml/src/htmlCard.js'\n\n\nexport const krakenHtml = {\n    'page': htmlPage,\n    'record': htmlRecord,\n    'table': htmlTable,\n    'value': htmlValue,\n    'card': htmlCard\n}","\nimport { htmlValue } from './htmlValue.js'\n\n\n\nexport function htmlRecord(record) {\n\n\n    let content = `<dl class=\"row\">${_getHtml(record)} </dl>`\n\n    return content\n\n}\n\n\n\n\nfunction _getHtml(value) {\n\n    let content = ''\n\n    console.log(_isObject(value), _isArray(value))\n    if (_isObject(value)==true) {\n        content += `<dl class=\"row\">`\n        for (let k of Object.keys(value)) {\n            let v = value[k]\n            content += ` <dt class=\"col-sm-2\">${k}</dt>`\n            content += ` <dd class=\"col-sm-10\">${_getHtmlValue(v)}</dd>`\n        }\n        content += `</dl>`\n\n    } else if (_isArray(value) == true) {\n\n        let n = 0\n        content += `<dl class=\"row\">`\n        for (let v of value) {\n            content += ` <dt class=\"col-sm-1\">[${n}]</dt>`\n            content += ` <dd class=\"col-sm-11\">${_getHtmlValue(v)}</dd>`\n            n += 1\n        }\n        content += `</dl>`\n        \n    } else {\n        content = content + String(value)\n    }\n\n    return content\n\n\n}\n\n\nfunction _getHtmlValue(value) {\n\n    let content =''\n    if (_isObject(value)==true) {\n        let s = htmlValue(value)\n        content += ` <details>\n                    <summary>${s}</summary>\n                    ${_getHtml(value)}\n                </details>`\n    } else if (_isArray(value)==true) {\n        let s = value.length\n        content += ` <details>\n                      <summary>[${s}]</summary>\n                      ${_getHtml(value)}\n                  </details>`\n    }\n    else {\n        content = value\n    }\n\n    return content\n\n\n}\n\n\n\nfunction _isObject(value) {\n\n    if (value !== null && typeof value === 'object' && Array.isArray(value)==false) {\n        return true\n    }\n    return false\n\n}\n\nfunction _isArray(value) {\n    if (Array.isArray(value) == true) {\n        return true\n    }\n    return false\n\n}","\nimport {htmlRecord} from './htmlRecord.js'\n\nexport function htmlValue(value) {\n\n\n    return _getValue(value)\n\n}\n\n\nfunction _getValue(value){\n\n\n    if(_isObject(value)){\n\n        return _getValueObject(value)\n        \n    } else if (_isArray(value)){\n\n\n        return _getValueArray(value)\n        \n    } else {\n\n        return _getValueOther(value)\n        \n    }\n    \n\n\n    \n}\n\n\nfunction _getValueObject(value){\n\n    let content = ''\n    let record_type = value?.['@type'] || null\n    let record_id = value?.['@id'] || null\n\n\n    if(record_type && record_id){\n        content += `<a href=\"/${record_type}/${record_id}\">${_getHeading1(value)}</a>`\n    } else {\n        content += JSON.stringify(value)\n    }\n\n    \n    return content\n    \n}\n\n\n\nfunction _getValueArray(value){\n \n    if(value.length == 1){\n        return _getValue(value)\n    }\n\n    let content = ''\n    content += '<ul>'\n    for(let v of value){\n        content += `<li>${_getValue(v)}</li>`\n    }\n    content += '</ul>'\n    return `<details> <summary>[${value.length}]</summary>${content}</details>`\n\n\n}\n\nfunction _getValueOther(value){\n\n    return value\n\n    \n}\n\n\n\nfunction _getHeading1(value){\n\n    let heading1 = null\n    let record_type = value?.['@type'] || null\n    let record_id = value?.['@id'] || null\n    \n    let name = value?.['name'] || null\n    let givenName = value?.['givenName'] || null\n    let familyName = value?.['familyName'] || null\n    let url = value?.['url'] || null\n    let email = value?.['email'] || null\n    let contentUrl = value?.['contentUrl'] || null\n\n    if(url && url != null){\n        heading1 = url\n    }\n\n    if(email && email != null){\n        heading1 = email\n    }\n\n    if(name && name != null){\n        heading1 = name\n    }\n\n    if(givenName && givenName != null){\n        heading1 = `${givenName} ${familyName}`\n    }\n\n    if(record_type == \"PostalAddress\"){\n        heading1 =  `${value.streetAddress}, ${value.addressLocality}, ${value.addressRegion}, ${value.addressCountry}, ${value.postalCode}`\n    }\n\n\n    if(contentUrl){\n        heading1 = `<img src=\"${contentUrl}\" class=\"img-fluid\" alt=\"...\">` \n    }\n\n    \n    return heading1\n    \n}\n\n\nfunction _getValueImage(value){\n\n\n    let contentUrl = value?.['contentUrl'] || null\n\n    let content = `<img src=\"${contentUrl}\" class=\"img-fluid\" alt=\"...\">` \n    \n}\n\n\n\n\nfunction _isObject(value) {\n\n    if (value !== null && typeof value === 'object' && Array.isArray(value)==false) {\n        return true\n    }\n    return false\n\n}\n\nfunction _isArray(value) {\n    if (Array.isArray(value) == true) {\n        return true\n    }\n    return false\n\n}","\n\nexport function htmlPage(title, content){\n\n    return `\n\n    <!doctype html>\n    <html lang=\"en\">\n\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <title>${title}</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n\n        ${content}\n\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"\n            integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\"\n            crossorigin=\"anonymous\"></script>\n\n        <script type=\"module\" src=\"script.js\"></script>\n\n\n    </body>\n\n    </html>\n    \n    \n    `\n    \n}","\n\nimport { htmlValue } from './htmlValue.js'\n\n\nexport function htmlTable(records, keys, headers) {\n\n\n    return _getTable(records, keys, headers)\n\n}\n\n\nfunction _getTable(records, keys, headers){\n\n    records = ensureArray(records)\n\n    if(!keys || keys == null){\n        keys = Object.keys(records[0])\n    }\n\n    if(!headers || headers == null){\n        headers = keys\n    }\n    \n    let content = `<table class=\"table\">${_getTableHeader(headers)} ${_getTableRows(keys, records)}</table>`\n\n    return content\n}\n\n\n\nfunction _getTableHeader(keys){\n\n    let content = ``\n\n    content += `<thead><tr>`\n\n    for(let k of keys){\n        content += `  <th scope=\"col\">${k}</th>`\n    }\n\n    \n    content += `</tr></thead>`\n\n    return content\n}\n\n\nfunction _getTableRows(keys, records){\n\n    let content = ''\n    content += `<tbody>`\n    \n\n    for(let record of records){\n\n        content += `<tr>`\n\n        for(let k of keys){\n\n            content += `<td class=\"text-truncate\">${htmlValue(record[k])}</td>`\n            \n        }\n\n        content += `</tr>`\n           \n    }\n\n    content += `</tbody>`\n\n    return content\n\n}\n\n\n\n\n\nfunction ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}","\n\nimport { htmlValue } from './htmlValue.js'\nimport { htmlRecord } from './htmlRecord.js'\n\n\nexport function htmlCard(value){\n\n    return _getCard(value)\n    \n}\n\n\nfunction _getCard(value){\n\n    let imageUrl = value.contentUrl || value.image?.contentUrl || ''\n\n    let modalId = 'modal_' + String(crypto.randomUUID())\n    \n    let heading1 = htmlValue(value)\n    \n    let desc = value?.text || value?.description || ''\n    \n    let content = `\n        <div class=\"card\" style=\"width: 18rem;\">\n      <a type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#${modalId}\">\n        <img src=\"${imageUrl}\" class=\"card-img-top\" alt=\"...\">\n      </a>\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">${heading1}</h5>\n        <p class=\"card-text\">${desc}</p>\n        \n      </div>\n\n\n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"${modalId}\" tabindex=\"-1\" aria-labelledby=\"${modalId}\" aria-hidden=\"true\">\n          <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                \n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n              </div>\n              <div class=\"modal-body\">\n                 <img src=\"${imageUrl}\" class=\"card-img-top\" alt=\"...\">\n                 <div>\n                    <details><summary>${htmlValue(value)}</summary>${htmlRecord(value)}</details>\n                </div>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n    \n\n      \n    </div>`\n\n    return content\n    \n}"],"names":[],"version":3,"file":"main.js.map"}